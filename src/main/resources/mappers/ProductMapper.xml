<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.test.product.mapper.ProductMapper">

    <!--구매예정 상품 유저pk 기준으로 모두 불러오기-->
    <select id="selProductList">
        SELECT A.product_pk AS productPk
            ,A.user_pk AS userPk
            ,B.category_nm AS categoryNm
            ,A.product_nm AS productNm
            ,A.memo
            ,A.created_at AS createdAt
            ,A.buying_check AS buyingCheck
            ,date(A.buying_date) AS buyingDate
        FROM t_purchase_product A
        JOIN t_category B
        ON A.category_pk = B.category_pk
        WHERE A.user_pk = #{userPk}
        <choose>
            <when test="choiceList == 0">
                AND A.buying_check IN (0,1)
            </when>
            <when test="choiceList == 1">
                AND A.buying_check = 0
            </when>
            <when test="choiceList == 2">
                AND A.buying_check = 1
            </when>
        </choose>
        <if test="selectDate != null and selectDate != ''">
            AND date(A.created_at) = #{selectDate}
        </if>
    </select>
    <!--/구매예정 상품 유저pk 기준으로 모두 불러오기-->

    <!--구매예정 상품 추가-->
    <insert id="insProduct">
        INSERT INTO t_purchase_product
        SET user_pk = #{userPk}
            ,category_pk = #{categoryPk}
            ,product_nm = #{productNm}
        <if test="memo != null and memo != '' ">
            ,memo = #{memo}
        </if>
    </insert>
    <!--/구매예정 상품 추가-->

    <!--구매예정 상품 수정-->
    <update id="updProduct">
        UPDATE t_purchase_product
        SET category_pk = #{categoryPk}
            ,product_nm = #{productNm}
        <choose>
            <when test="memo != null and memo != '' ">
                ,memo = #{memo}
            </when>
            <otherwise>
                ,memo = NULL
            </otherwise>
        </choose>
        WHERE user_pk = #{userPk}
    </update>
    <!--/구매예정 상품 수정-->

    <!--구매예정 상품 구매확정 처리-->
    <update id="checkProduct">
        UPDATE t_purchase_product
        SET buying_check = 1
            ,buying_date = NOW()
        WHERE product_pk = #{productPk}
    </update>
    <!--/구매예정 상품 구매확정 처리-->

    <!--구매예정 상품 삭제처리-->
    <delete id="delProduct">
        DELETE FROM t_purchase_product
        WHERE product_pk IN
        <foreach collection="productPkList" item="productPk" open="(" close=")" separator=",">
            #{productPk}
        </foreach>
        AND buying_check = 0
    </delete>
    <!--/구매예정 상품 삭제처리-->

    <!--구매확정 상품 리스트에서 숨기기 처리-->
    <update id="hiedProduct">
        UPDATE t_purchase_product
        SET buying_check = 2
        WHERE product_pk IN
        <foreach collection="productPkList" item="productPk" open="(" close=")" separator=",">
            #{productPk}
        </foreach>
        AND buying_check = 1
    </update>
    <!--/구매확정 상품 리스트에서 숨기기 처리-->


    <!--받은 pk값이 테이블에 있는 값인지 확인-->
    <select id="checkProductPk">
        SELECT product_pk AS productPk
            ,user_pk AS userPk
            ,category_pk AS categoryPk
            ,product_nm AS productNm
            ,created_at AS createdAt
            ,buying_check AS buyingCheck
            ,buying_date AS buyingDate
        FROM t_purchase_product
        WHERE product_pk = #{productPk}
    </select>
    <!--받은 pk값이 테이블에 있는 값인지 확인-->


    <!--받은 pk값들이 테이블에 있는 값인지 확인-->
    <select id="checkProductPkList">
        SELECT product_pk AS productPk
            ,user_pk AS userPk
            ,category_pk AS categoryPk
            ,product_nm AS productNm
            ,created_at AS createdAt
            ,buying_check AS buyingCheck
            ,buying_date AS buyingDate
        FROM t_purchase_product
        WHERE product_pk IN
        <foreach collection="productPkList" item="productPk" open="(" separator="," close=")">
            #{productPk}
        </foreach>
    </select>
    <!--받은 pk값들이 테이블에 있는 값인지 확인-->


</mapper>